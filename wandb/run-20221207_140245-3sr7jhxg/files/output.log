  0%|                                                                             | 0/200 [00:00<?, ?it/s]Traceback (most recent call last):
  File "/home/sam/.local/lib/python3.10/site-packages/transformers/tokenization_utils_base.py", line 707, in convert_to_tensors
    tensor = as_tensor(value)
ValueError: too many dimensions 'str'
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "/home/sam/Documents/hacs479/train_model.py", line 57, in <module>
    trainer.train()
  File "/home/sam/.local/lib/python3.10/site-packages/transformers/trainer.py", line 1317, in train
    return inner_training_loop(
  File "/home/sam/.local/lib/python3.10/site-packages/transformers/trainer.py", line 1528, in _inner_training_loop
    for step, inputs in enumerate(epoch_iterator):
  File "/home/sam/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 530, in __next__
    data = self._next_data()
  File "/home/sam/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 570, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/sam/.local/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 52, in fetch
    return self.collate_fn(data)
  File "/home/sam/.local/lib/python3.10/site-packages/transformers/data/data_collator.py", line 247, in __call__
    batch = self.tokenizer.pad(
  File "/home/sam/.local/lib/python3.10/site-packages/transformers/tokenization_utils_base.py", line 2876, in pad
    return BatchEncoding(batch_outputs, tensor_type=return_tensors)
  File "/home/sam/.local/lib/python3.10/site-packages/transformers/tokenization_utils_base.py", line 209, in __init__
    self.convert_to_tensors(tensor_type=tensor_type, prepend_batch_axis=prepend_batch_axis)
  File "/home/sam/.local/lib/python3.10/site-packages/transformers/tokenization_utils_base.py", line 723, in convert_to_tensors
    raise ValueError(
ValueError: Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' 'truncation=True' to have batched tensors with the same length.